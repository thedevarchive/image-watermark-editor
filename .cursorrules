This is a React-based web application that places watermarks on image files. The project uses TypeScript.

Key Principles

- Write concise, technical TypeScript code with accurate examples.
- Use functional and declarative programming patterns; avoid classes.
- Prefer iteration and modularisation over code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
- Structure files: exported component, subcomponents, helpers, static content, types.
- Prefer const over let for variable declarations
- Use camelCase for variable and function names, PascalCase for component names

Naming Conventions

- Use lowercase with dashes for directories (e.g., components/auth-wizard).
- Favor named exports for components.

TypeScript Usage

- Use TypeScript for all code; prefer types over interfaces.
- Avoid enums; use maps instead.
- Use functional components with TypeScript types.

Syntax and Formatting

- Use the "function" keyword for pure functions.
- Prefer arrow functions over normal functions.
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
- Use declarative JSX.

Key Conventions

- Use `data` when returning a response with a status code, otherwise return plain objects.

Other Details 

- Label elements must be placed before their corresponding input field
- Styles of each element should be in App.css file, except for the drag & drop field which has its own style in dragdrop.css